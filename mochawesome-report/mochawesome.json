{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2022-12-15T17:43:19.084Z",
    "end": "2022-12-15T17:43:19.100Z",
    "duration": 16,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ab8ebba-3ee8-4017-adc8-da8639aa34dd",
      "title": "",
      "fullFile": "/Users/samundra.dhakal/Desktop/personal/Uni/SoftwareTesting/test/compact.test.js",
      "file": "/test/compact.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aae0ab51-7cdc-480f-addc-a1bdfc22f888",
          "title": "Creates an array with all falsey values removed",
          "fullFile": "/Users/samundra.dhakal/Desktop/personal/Uni/SoftwareTesting/test/compact.test.js",
          "file": "/test/compact.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return empty array if pass an empty array",
              "fullTitle": "Creates an array with all falsey values removed Return empty array if pass an empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = compact([]);\nexpect(result).to.deep.eq([]);",
              "err": {},
              "uuid": "b5adad35-ed05-44a6-b05f-6076fa91a5bd",
              "parentUUID": "aae0ab51-7cdc-480f-addc-a1bdfc22f888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Throw error message as 'Array is not iterable' if pass undefined",
              "fullTitle": "Creates an array with all falsey values removed Throw error message as 'Array is not iterable' if pass undefined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let callFunction = () => compact(undefined);\nexpect(callFunction).to.throw('array is not iterable');",
              "err": {},
              "uuid": "cce1d9d2-7fdd-495f-b0db-2a8bc71e5c34",
              "parentUUID": "aae0ab51-7cdc-480f-addc-a1bdfc22f888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove the falsy value from the array",
              "fullTitle": "Creates an array with all falsey values removed remove the falsy value from the array",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let result = compact([0, 1, false, 2, 3]);\nexpect(result).to.deep.eq([1, 2, 3]);",
              "err": {
                "message": "AssertionError: expected [ 2, 3, '-1': 1 ] to deeply equal [ 1, 2, 3 ]",
                "estack": "AssertionError: expected [ 2, 3, '-1': 1 ] to deeply equal [ 1, 2, 3 ]\n    at Context.<anonymous> (file:///Users/samundra.dhakal/Desktop/personal/Uni/SoftwareTesting/test/compact.test.js:17:30)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": " [\n+   1\n   2\n   3\n ]\n"
              },
              "uuid": "25f1ab1f-0b8d-412c-8ddb-c0e09a5ec664",
              "parentUUID": "aae0ab51-7cdc-480f-addc-a1bdfc22f888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove the falsy value from the array",
              "fullTitle": "Creates an array with all falsey values removed remove the falsy value from the array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(\n  compact([0, 1, false, undefined, 2, '', 'product2'])\n).to.deep.equal([1, 2, 'product2']);\nexpect(compact([0, 1, false, undefined, 2, '', 'product2'])).to.be.an(\n  'array'\n);",
              "err": {
                "message": "AssertionError: expected [ 2, 'product2', '-1': 1 ] to deeply equal [ 1, 2, 'product2' ]",
                "estack": "AssertionError: expected [ 2, 'product2', '-1': 1 ] to deeply equal [ 1, 2, 'product2' ]\n    at Context.<anonymous> (file:///Users/samundra.dhakal/Desktop/personal/Uni/SoftwareTesting/test/compact.test.js:23:17)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": " [\n+   1\n   2\n   \"product2\"\n ]\n"
              },
              "uuid": "4045398d-efbc-44e4-9f41-95e94e0fa07c",
              "parentUUID": "aae0ab51-7cdc-480f-addc-a1bdfc22f888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5adad35-ed05-44a6-b05f-6076fa91a5bd",
            "cce1d9d2-7fdd-495f-b0db-2a8bc71e5c34"
          ],
          "failures": [
            "25f1ab1f-0b8d-412c-8ddb-c0e09a5ec664",
            "4045398d-efbc-44e4-9f41-95e94e0fa07c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}